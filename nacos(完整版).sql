/*
 Navicat Premium Data Transfer

 Source Server         : 腾讯云
 Source Server Type    : MySQL
 Source Server Version : 50741
 Source Host           : 1.14.58.8:3306
 Source Schema         : nacos

 Target Server Type    : MySQL
 Target Server Version : 50741
 File Encoding         : 65001

 Date: 26/04/2023 23:34:22
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 76 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (1, 'conversation-dev.yaml', 'DEV_GROUP', 'spring:\n  redis:\n    database: 0\n    host:: 1.14.58.8\n    port: 6379\n    password: root\n    lettuce:\n      pool:\n        max-active: 8\n        max-wait: -1\n        max-idle: 10\n        min-idle: 5\n      shutdown-timeout: 10000ms', '8141ccdb1f853686c34b71f8e458bf1c', '2023-03-15 10:18:12', '2023-04-14 06:49:02', 'nacos', '223.104.220.170', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '聊天模块的开发环境配置信息', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2, 'common.yaml', 'DEV_GROUP', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: 162.14.77.43:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '93820834a4469237bea5237565e3981a', '2023-03-15 10:18:50', '2023-04-26 15:26:33', 'nacos', '223.104.219.231', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '共享的配置文件', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (3, 'gateway-dev.yaml', 'DEV_GROUP', 'spring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 10000\n  cloud:\n    sentinel:\n      datasource:\n        gw-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-gw-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: gw-flow # 还可以是：degrade、authority、param-flow\n        gw-api-group:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-gw-api-group-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: gw-api-group # 还可以是：degrade、authority、param-flow\n    gateway:\n      httpclient:\n        connect-timeout: 10000\n      routes: # 网关路由配置\n        - id: conversation\n          uri: lb://conversation\n          predicates:\n            - Path=/conversation/**\n        - id: normal\n          uri: lb://normal\n          predicates:\n            - Path=/common/**\n        - id: personManagement\n          uri: lb://personManagement\n          predicates:\n            - Path=/personManagement/**\n        - id: sharePlatform\n          uri: lb://sharePlatform\n          predicates:\n            - Path=/sharePlatform/**\n        - id: technicalArchive\n          uri: lb://technicalArchive\n          predicates:\n            - Path=/technicalArchive/**\n        - id: userService\n          uri: lb://userService\n          predicates:\n            - Path=/user/**\n        - id: admin\n          uri: lb://admin\n          predicates:\n            - Path=/admin/**,/druid/**    ', '3661b6657dbaa66d3bb0c6d725c96882', '2023-03-15 10:19:35', '2023-04-26 14:05:56', 'nacos', '223.104.219.231', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '网关的开发环境配置信息', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (4, 'normal-dev.yaml', 'DEV_GROUP', 'file:\n  fdfs:\n    groupName: group1\n    soTimeout: 1500 # 上传超时时间\n    connectTimeout: 600 # 连接超时时间\n    thumbImage: # 缩略图生成参数\n      width: 150\n      height: 150\n    trackerList: # TrackerList参数，支持多个\n      - 124.223.38.131:22122\n  aliyun:\n    endpoint: oss-cn-chengdu.aliyuncs.com # oss的地域节点\n    bucketName: tianyufighter # oss的Bucket名称（相当于磁盘）\n    accessKeyId: LTAI5tB8GzEiiJQdH8Q33SUm # oss的AccessKeyId(相当于阿里云的账号)\n    accessKeySecret: EZ5Vtq4X4QkrJyuRk9ogGZaXxenOJc # oss的AccessKeySecret(相当于阿里云的密码)\n    fileHost: images # oss的目标文件夹\n  method: 2 # 存储文件的方式（1，表示本地存储；2表示阿里云存储；3表示fastdfs存储）\nspring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 10000', '832026d0f195fb7103ee182656874ef6', '2023-03-15 10:20:50', '2023-04-13 12:33:16', 'nacos', '171.210.137.198', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '常用的功能模块的开发环境配置信息', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (5, 'personManagement-dev.yaml', 'DEV_GROUP', 'spring:\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n  mail:\n    host: smtp.qq.com\n    port: 465\n    username: titos_yunke@qq.com\n    password: xbayvkiinblkdcee\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactory:\n            class: javax.net.ssl.SSLSocketFactory\n\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.titos.personalmanagement\nYK:\n  sys-conf:\n    # enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'e8cc45bad7c7cea5ba926c34e005991e', '2023-03-15 10:21:51', '2023-04-15 05:18:47', 'nacos', '223.104.220.170', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '个人信息管理模块的开发环境配置', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (6, 'sharePlatform-dev.yaml', 'DEV_GROUP', 'spring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 10000', 'd0f9f8ee4002bab0ab39b61ce38c057d', '2023-03-15 10:22:42', '2023-03-18 13:13:24', 'nacos', '171.210.39.51', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '分享模块的开发环境配置信息', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (7, 'technicalArchive-dev.yaml', 'DEV_GROUP', '# spring:\n#   redis:\n#     database: 0\n#     host: 1.14.58.8\n#     port: 6379\n#     password: root\n#     lettuce:\n#       pool:\n#         max-active: 8\n#         max-wait: -1\n#         max-idle: 10\n#         min-idle: 5\n#       shutdown-timeout: 100ms\n\n# # mybatis 配置\n# mybatis:\n#   mapper-locations:\n#     - classpath:mappers/*.xml\n\n# # 开启mybatis 的日志记录\n# logging:\n#   level:\n#     com:\n#       titos:\n#         conversation:\n#           dao: debug\n', '81037690be6dae1efd667c6db84a0125', '2023-03-15 10:24:22', '2023-03-18 13:13:09', 'nacos', '171.210.39.51', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '博客模块的开发环境配置信息', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (18, 'userService-dev.yaml', 'DEV_GROUP', 'df', 'eff7d5dba32b4da32d9a67a519434d3f', '2023-03-15 10:32:41', '2023-03-15 10:32:41', NULL, '118.115.59.90', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '用户服务的开发环境配置信息', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (20, 'admin-dev.yaml', 'DEV_GROUP', 'spring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 10000', 'd0f9f8ee4002bab0ab39b61ce38c057d', '2023-03-15 10:59:49', '2023-04-15 00:43:43', 'nacos', '223.104.220.170', 'YUNKE', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', '后台管理的开发环境配置信息', '', '', 'yaml', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(20) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 127 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (0, 40, 'consumer-dev.yaml', 'DEV_GROUP', 'YUNKE', 'd', '8277e0910d750195b448797616e091ad', '2023-04-06 12:55:30', '2023-04-06 04:55:31', NULL, '171.210.137.198', 'I', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (0, 41, 'provider-dev.yaml', 'DEV_GROUP', 'YUNKE', 'd', '8277e0910d750195b448797616e091ad', '2023-04-06 12:56:02', '2023-04-06 04:56:03', NULL, '171.210.137.198', 'I', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (39, 42, 'consumer-dev.yaml', 'DEV_GROUP', 'YUNKE', 'd', '8277e0910d750195b448797616e091ad', '2023-04-06 12:56:12', '2023-04-06 04:56:12', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (0, 43, 'consumer-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1680757132517,\"gmtModified\":1680757132517,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"/sayHello\",\"strategy\":0}]', '3d9bbcf47b81cfa1968540a37e77f878', '2023-04-06 12:58:53', '2023-04-06 04:58:53', NULL, '171.210.137.198', 'I', '');
INSERT INTO `his_config_info` VALUES (42, 44, 'consumer-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1680757132517,\"gmtModified\":1680757132517,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"/sayHello\",\"strategy\":0}]', '3d9bbcf47b81cfa1968540a37e77f878', '2023-04-06 14:02:18', '2023-04-06 06:02:19', NULL, '171.210.137.198', 'U', '');
INSERT INTO `his_config_info` VALUES (42, 45, 'consumer-flow-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-06 14:03:24', '2023-04-06 06:03:24', NULL, '171.210.137.198', 'U', '');
INSERT INTO `his_config_info` VALUES (42, 46, 'consumer-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1680761003332,\"gmtModified\":1680761003332,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"/sayHello\",\"strategy\":0}]', '529ca84b00c3d6bd6694afd4655bc074', '2023-04-06 14:03:52', '2023-04-06 06:03:53', NULL, '171.210.137.198', 'U', '');
INSERT INTO `his_config_info` VALUES (42, 47, 'consumer-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":3.0,\"gmtCreate\":1680761003332,\"gmtModified\":1680761032028,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"/sayHello\",\"strategy\":0}]', 'ba3281dc5b7be36929fc9cfbc82d0225', '2023-04-06 14:04:21', '2023-04-06 06:04:22', NULL, '171.210.137.198', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 48, 'consumer-system-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"avgRt\":-1,\"gmtCreate\":1680761346491,\"gmtModified\":1680761346491,\"highestCpuUsage\":-1.0,\"highestSystemLoad\":-1.0,\"id\":1,\"ip\":\"192.168.43.163\",\"maxThread\":-1,\"port\":8720,\"qps\":2.0}]', 'b798e6b078778b4aa95b1f9a34248a52', '2023-04-06 14:09:07', '2023-04-06 06:09:07', NULL, '171.210.137.198', 'I', '');
INSERT INTO `his_config_info` VALUES (47, 49, 'consumer-system-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"avgRt\":-1,\"gmtCreate\":1680761346491,\"gmtModified\":1680761346491,\"highestCpuUsage\":-1.0,\"highestSystemLoad\":-1.0,\"id\":1,\"ip\":\"192.168.43.163\",\"maxThread\":-1,\"port\":8720,\"qps\":2.0}]', 'b798e6b078778b4aa95b1f9a34248a52', '2023-04-06 14:10:52', '2023-04-06 06:10:52', NULL, '171.210.137.198', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 50, 'provider-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"provider\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1680762199248,\"gmtModified\":1680762199248,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8721,\"resource\":\"/getUser\",\"strategy\":0}]', '2e79971972493b6a93bb359a8e8f1570', '2023-04-06 14:23:20', '2023-04-06 06:23:20', NULL, '171.210.137.198', 'I', '');
INSERT INTO `his_config_info` VALUES (2, 51, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 124.223.38.131:8080\n    front-host-url: 124.223.38.131:8080\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '3c58100e67eb2edd5cd4771c6e6b8959', '2023-04-06 19:10:03', '2023-04-06 11:10:04', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 52, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\nspring:\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 124.223.38.131:8080\n    front-host-url: 124.223.38.131:8080\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '8304854f110f8390471927933f5ed900', '2023-04-06 19:16:05', '2023-04-06 11:16:05', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 53, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\nspring:\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 124.223.38.131:8080\n    front-host-url: 124.223.38.131:8080\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'e57b72aa7c8965e79ecde3be898130fc', '2023-04-06 19:16:48', '2023-04-06 11:16:48', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (42, 54, 'consumer-flow-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-06 19:18:28', '2023-04-06 11:18:28', NULL, '171.210.137.198', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 55, 'consumer-param-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"gmtCreate\":1680779951100,\"gmtModified\":1680779951100,\"id\":1,\"ip\":\"192.168.43.163\",\"port\":8720,\"rule\":{\"burstCount\":0,\"clusterConfig\":{\"fallbackToLocalWhenFail\":true,\"sampleCount\":10,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"durationInSec\":1,\"grade\":1,\"limitApp\":\"default\",\"maxQueueingTimeMs\":0,\"paramFlowItemList\":[],\"paramIdx\":0,\"resource\":\"/sayHello\"}}]', '8494af5e8b5560d01d974647406a724b', '2023-04-06 19:19:11', '2023-04-06 11:19:11', NULL, '171.210.137.198', 'I', '');
INSERT INTO `his_config_info` VALUES (42, 56, 'consumer-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1680779908025,\"gmtModified\":1680779908025,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"/sayHello\",\"strategy\":0}]', 'c7e5954d650975ee99a5c13423b51c59', '2023-04-06 19:22:17', '2023-04-06 11:22:18', NULL, '171.210.137.198', 'D', '');
INSERT INTO `his_config_info` VALUES (47, 57, 'consumer-system-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-06 19:22:21', '2023-04-06 11:22:21', NULL, '171.210.137.198', 'D', '');
INSERT INTO `his_config_info` VALUES (49, 58, 'provider-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"provider\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1680762199248,\"gmtModified\":1680762199248,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8721,\"resource\":\"/getUser\",\"strategy\":0}]', '2e79971972493b6a93bb359a8e8f1570', '2023-04-06 19:22:24', '2023-04-06 11:22:24', NULL, '171.210.137.198', 'D', '');
INSERT INTO `his_config_info` VALUES (54, 59, 'consumer-param-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"consumer\",\"gmtCreate\":1680779951100,\"gmtModified\":1680779951100,\"id\":1,\"ip\":\"192.168.43.163\",\"port\":8720,\"rule\":{\"burstCount\":0,\"clusterConfig\":{\"fallbackToLocalWhenFail\":true,\"sampleCount\":10,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"durationInSec\":1,\"grade\":1,\"limitApp\":\"default\",\"maxQueueingTimeMs\":0,\"paramFlowItemList\":[],\"paramIdx\":0,\"resource\":\"/sayHello\"}}]', '8494af5e8b5560d01d974647406a724b', '2023-04-06 19:22:27', '2023-04-06 11:22:28', NULL, '171.210.137.198', 'D', '');
INSERT INTO `his_config_info` VALUES (3, 60, 'gateway-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  cloud:\n    gateway:\n      httpclient:\n        connect-timeout: 10000\n      routes: # 网关路由配置\n        - id: conversation\n          uri: lb://conversation\n          predicates:\n            - Path=/conversation/**\n        - id: normal\n          uri: lb://normal\n          predicates:\n            - Path=/common/**\n        - id: personManagement\n          uri: lb://personManagement\n          predicates:\n            - Path=/personManagement/**\n        - id: sharePlatform\n          uri: lb://sharePlatform\n          predicates:\n            - Path=/sharePlatform/**\n        - id: technicalArchive\n          uri: lb://technicalArchive\n          predicates:\n            - Path=/technicalArchive/**\n        - id: userService\n          uri: lb://userService\n          predicates:\n            - Path=/userService/**\n        - id: admin\n          uri: lb://admin\n          predicates:\n            - Path=/admin/**,/druid/**    ', '43af77bcffd6a7e36988462773f92d09', '2023-04-13 15:05:56', '2023-04-13 07:05:57', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (4, 61, 'normal-dev.yaml', 'DEV_GROUP', 'YUNKE', 'file:\n  fdfs:\n    groupName: group1\n    soTimeout: 1500 # 上传超时时间\n    connectTimeout: 600 # 连接超时时间\n    thumbImage: # 缩略图生成参数\n      width: 150\n      height: 150\n    trackerList: # TrackerList参数，支持多个\n      - 124.223.38.131:22122\n  aliyun:\n    endpoint: oss-cn-chengdu.aliyuncs.com # oss的地域节点\n    bucketName: tianyufighter # oss的Bucket名称（相当于磁盘）\n    accessKeyId: LTAI5tB8GzEiiJQdH8Q33SUm # oss的AccessKeyId(相当于阿里云的账号)\n    accessKeySecret: EZ5Vtq4X4QkrJyuRk9ogGZaXxenOJc # oss的AccessKeySecret(相当于阿里云的密码)\n    fileHost: images # oss的目标文件夹\n  method: 2 # 存储文件的方式（1，表示本地存储；2表示阿里云存储；3表示fastdfs存储）\nspring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 100', '89b9b84807c6b19ddafe08c57a1dbc22', '2023-04-13 20:30:42', '2023-04-13 12:30:42', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (3, 62, 'gateway-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 100\n  cloud:\n    gateway:\n      httpclient:\n        connect-timeout: 10000\n      routes: # 网关路由配置\n        - id: conversation\n          uri: lb://conversation\n          predicates:\n            - Path=/conversation/**\n        - id: normal\n          uri: lb://normal\n          predicates:\n            - Path=/common/**\n        - id: personManagement\n          uri: lb://personManagement\n          predicates:\n            - Path=/personManagement/**\n        - id: sharePlatform\n          uri: lb://sharePlatform\n          predicates:\n            - Path=/sharePlatform/**\n        - id: technicalArchive\n          uri: lb://technicalArchive\n          predicates:\n            - Path=/technicalArchive/**\n        - id: userService\n          uri: lb://userService\n          predicates:\n            - Path=/userService/**\n        - id: admin\n          uri: lb://admin\n          predicates:\n            - Path=/admin/**,/druid/**    ', '0afcb4a66e893bfca563641d15e939d0', '2023-04-13 20:32:54', '2023-04-13 12:32:54', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (4, 63, 'normal-dev.yaml', 'DEV_GROUP', 'YUNKE', 'file:\n  fdfs:\n    groupName: group1\n    soTimeout: 1500 # 上传超时时间\n    connectTimeout: 600 # 连接超时时间\n    thumbImage: # 缩略图生成参数\n      width: 150\n      height: 150\n    trackerList: # TrackerList参数，支持多个\n      - 124.223.38.131:22122\n  aliyun:\n    endpoint: oss-cn-chengdu.aliyuncs.com # oss的地域节点\n    bucketName: tianyufighter # oss的Bucket名称（相当于磁盘）\n    accessKeyId: LTAI5tB8GzEiiJQdH8Q33SUm # oss的AccessKeyId(相当于阿里云的账号)\n    accessKeySecret: EZ5Vtq4X4QkrJyuRk9ogGZaXxenOJc # oss的AccessKeySecret(相当于阿里云的密码)\n    fileHost: images # oss的目标文件夹\n  method: 2 # 存储文件的方式（1，表示本地存储；2表示阿里云存储；3表示fastdfs存储）\nspring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 1000', 'c872e81acf6f3b8686c2bcaa2d7e3e21', '2023-04-13 20:33:15', '2023-04-13 12:33:16', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 64, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 124.223.38.131:8080\n    front-host-url: 124.223.38.131:8080\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'eeca97261717c6f9b32484bb7dc182b8', '2023-04-13 21:15:12', '2023-04-13 13:15:13', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 65, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 124.223.38.131:8080\n    front-host-url: 124.223.38.131:8080\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'd24b14a2c7d38f522502f9d7090e90f7', '2023-04-13 21:16:52', '2023-04-13 13:16:53', 'nacos', '171.210.137.198', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (5, 66, 'personManagement-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n  mail:\n    host: smtp.qq.com\n    port: 465\n    username: titos_yunke@qq.com\n    password: xbayvkiinblkdcee\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactory:\n            class: javax.net.ssl.SSLSocketFactory\n\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.titos.personalmanagement\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 124.223.38.131:8080\n    front-host-url: 124.223.38.131:8080\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'e7f6a26f27793b8973c985a2a2b8f61e', '2023-04-14 13:34:14', '2023-04-14 05:34:15', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 67, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 124.223.38.131:8080\n    front-host-url: 124.223.38.131:8080\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'd24b14a2c7d38f522502f9d7090e90f7', '2023-04-14 14:40:51', '2023-04-14 06:40:52', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (1, 68, 'conversation-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  redis:\n    database: 0\n    host:: 1.14.58.8\n    port: 6379\n    password: root\n    lettuce:\n      pool:\n        max-active: 8\n        max-wait: -1\n        max-idle: 10\n        min-idle: 5\n      shutdown-timeout: 100ms\n\n# mybatis 配置\nmybatis:\n  mapper-locations:\n    - classpath:mappers/*.xml\n\n# 开启mybatis 的日志记录\nlogging:\n  level:\n    com:\n      titos:\n        conversation:\n          dao: debug', '8fa04bb139da441915d1bdc6dd38588b', '2023-04-14 14:45:30', '2023-04-14 06:45:30', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (1, 69, 'conversation-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  redis:\n    database: 0\n    host:: 1.14.58.8\n    port: 6379\n    password: root\n    lettuce:\n      pool:\n        max-active: 8\n        max-wait: -1\n        max-idle: 10\n        min-idle: 5\n      shutdown-timeout: 100ms\n\n# # mybatis 配置\n# mybatis:\n#   mapper-locations:\n#     - classpath:mappers/*.xml\n\n# # 开启mybatis 的日志记录\n# logging:\n#   level:\n#     com:\n#       titos:\n#         conversation:\n#           dao: debug', '425a9be9740bf7f239ca327d3d9aaa4b', '2023-04-14 14:48:50', '2023-04-14 06:48:50', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (1, 70, 'conversation-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  redis:\n    database: 0\n    host:: 1.14.58.8\n    port: 6379\n    password: root\n    lettuce:\n      pool:\n        max-active: 8\n        max-wait: -1\n        max-idle: 10\n        min-idle: 5\n      shutdown-timeout: 10000ms', '8141ccdb1f853686c34b71f8e458bf1c', '2023-04-14 14:49:01', '2023-04-14 06:49:02', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 71, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 124.223.38.131:8080\n    front-host-url: 124.223.38.131:8080\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '0f71a82468ae2502e44a99fd2e95dc69', '2023-04-14 14:50:00', '2023-04-14 06:50:01', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 72, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'baac30d7628820ca1916c3c57fd6e132', '2023-04-14 14:50:14', '2023-04-14 06:50:15', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 73, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'baac30d7628820ca1916c3c57fd6e132', '2023-04-14 14:50:58', '2023-04-14 06:50:58', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (5, 74, 'personManagement-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n  mail:\n    host: smtp.qq.com\n    port: 465\n    username: titos_yunke@qq.com\n    password: xbayvkiinblkdcee\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactory:\n            class: javax.net.ssl.SSLSocketFactory\n\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.titos.personalmanagement\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'b42b6225fc77b2a3bc9b96a9c9fd8487', '2023-04-14 15:05:07', '2023-04-14 07:05:08', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (5, 75, 'personManagement-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n  mail:\n    host: smtp.qq.com\n    port: 465\n    username: titos_yunke@qq.com\n    password: xbayvkiinblkdcee\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactory:\n            class: javax.net.ssl.SSLSocketFactory\n\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.titos.personalmanagement\nYK:\n  sys-conf:\n    enable-mail-register: true\n    # front-end-url: 162.14.77.43:8010\n    # front-host-url: 39.108.117.49:80\n        front-end-url: 127.0.0.1:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'c75c6e6488899fa4fe3829bcf5c77bfe', '2023-04-14 15:07:11', '2023-04-14 07:07:11', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (5, 76, 'personManagement-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n  mail:\n    host: smtp.qq.com\n    port: 465\n    username: titos_yunke@qq.com\n    password: xbayvkiinblkdcee\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactory:\n            class: javax.net.ssl.SSLSocketFactory\n\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.titos.personalmanagement\nYK:\n  sys-conf:\n    enable-mail-register: true\n    # front-end-url: 162.14.77.43:8010\n    # front-host-url: 39.108.117.49:80\n    front-end-url: 127.0.0.1:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '3c01b1c4b32b7d039f0d83d561b97a9a', '2023-04-14 15:31:52', '2023-04-14 07:31:53', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (20, 77, 'admin-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 100', '369064d03043323fc526c5d936c20cde', '2023-04-15 08:43:42', '2023-04-15 00:43:43', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 78, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '33d8b1eabb3eb6f7afdd0e372f3eed14', '2023-04-15 08:44:12', '2023-04-15 00:44:12', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (5, 79, 'personManagement-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n  mail:\n    host: smtp.qq.com\n    port: 465\n    username: titos_yunke@qq.com\n    password: xbayvkiinblkdcee\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactory:\n            class: javax.net.ssl.SSLSocketFactory\n\nmybatis:\n  mapper-locations: classpath:mapper/*.xml\n  type-aliases-package: com.titos.personalmanagement\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'b42b6225fc77b2a3bc9b96a9c9fd8487', '2023-04-15 13:18:46', '2023-04-15 05:18:47', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 80, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: localhost:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '33d8b1eabb3eb6f7afdd0e372f3eed14', '2023-04-15 20:27:33', '2023-04-15 12:27:33', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 81, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: 39.108.117.49:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '52434fa314e1132382f77bbe1558ccbf', '2023-04-15 20:59:46', '2023-04-15 12:59:46', 'nacos', '223.104.220.170', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (39, 82, 'consumer-dev.yaml', 'DEV_GROUP', 'YUNKE', 'd', '8277e0910d750195b448797616e091ad', '2023-04-26 18:22:55', '2023-04-26 10:22:56', NULL, '223.104.219.231', 'D', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (40, 83, 'provider-dev.yaml', 'DEV_GROUP', 'YUNKE', 'd', '8277e0910d750195b448797616e091ad', '2023-04-26 18:23:01', '2023-04-26 10:23:01', NULL, '223.104.219.231', 'D', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 84, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: 162.14.77.43:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '93820834a4469237bea5237565e3981a', '2023-04-26 18:39:11', '2023-04-26 10:39:11', 'nacos', '223.104.219.231', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 85, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: 162.14.77.43:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n        gw-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-gw-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: gw-flow # 还可以是：degrade、authority、param-flow\n        gw-api-group:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-gw-api-group-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: gw-api-group # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '2e9b717133674917db4d923c94e83749', '2023-04-26 18:42:46', '2023-04-26 10:42:47', 'nacos', '223.104.219.231', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (3, 86, 'gateway-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 10000\n  cloud:\n    gateway:\n      httpclient:\n        connect-timeout: 10000\n      routes: # 网关路由配置\n        - id: conversation\n          uri: lb://conversation\n          predicates:\n            - Path=/conversation/**\n        - id: normal\n          uri: lb://normal\n          predicates:\n            - Path=/common/**\n        - id: personManagement\n          uri: lb://personManagement\n          predicates:\n            - Path=/personManagement/**\n        - id: sharePlatform\n          uri: lb://sharePlatform\n          predicates:\n            - Path=/sharePlatform/**\n        - id: technicalArchive\n          uri: lb://technicalArchive\n          predicates:\n            - Path=/technicalArchive/**\n        - id: userService\n          uri: lb://userService\n          predicates:\n            - Path=/userService/**\n        - id: admin\n          uri: lb://admin\n          predicates:\n            - Path=/admin/**,/druid/**    ', '9a593f10055a89c1137bbde5cf9402f5', '2023-04-26 18:44:29', '2023-04-26 10:44:29', 'nacos', '223.104.219.231', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (3, 87, 'gateway-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 10000\n  cloud:\n    gateway:\n      httpclient:\n        connect-timeout: 10000\n      routes: # 网关路由配置\n        - id: conversation\n          uri: lb://conversation\n          predicates:\n            - Path=/conversation/**\n        - id: normal\n          uri: lb://normal\n          predicates:\n            - Path=/common/**\n        - id: personManagement\n          uri: lb://personManagement\n          predicates:\n            - Path=/personManagement/**\n        - id: sharePlatform\n          uri: lb://sharePlatform\n          predicates:\n            - Path=/sharePlatform/**\n        - id: technicalArchive\n          uri: lb://technicalArchive\n          predicates:\n            - Path=/technicalArchive/**\n        - id: userService\n          uri: lb://userService\n          predicates:\n            - Path=/user/**\n        - id: admin\n          uri: lb://admin\n          predicates:\n            - Path=/admin/**,/druid/**    ', 'd14750e1a094af52879520d78d2949ef', '2023-04-26 18:47:37', '2023-04-26 10:47:37', 'nacos', '223.104.219.231', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (2, 88, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        dashboard: 162.14.77.43:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n        gw-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-gw-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: gw-flow # 还可以是：degrade、authority、param-flow\n        gw-api-group:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-gw-api-group-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: gw-api-group # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '2e9b717133674917db4d923c94e83749', '2023-04-26 18:48:17', '2023-04-26 10:48:18', 'nacos', '223.104.219.231', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (0, 89, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":1.0,\"gmtCreate\":1682506320381,\"gmtModified\":1682506320381,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"userService\",\"strategy\":0}]', '748aa744c99a478663e870133880e71a', '2023-04-26 18:52:00', '2023-04-26 10:52:01', NULL, '223.104.219.231', 'I', '');
INSERT INTO `his_config_info` VALUES (46, 90, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":1.0,\"gmtCreate\":1682506320381,\"gmtModified\":1682506320381,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"userService\",\"strategy\":0}]', '748aa744c99a478663e870133880e71a', '2023-04-26 19:05:38', '2023-04-26 11:05:38', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 91, 'userService-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"userService\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682507206925,\"gmtModified\":1682507206925,\"grade\":1,\"id\":2,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8721,\"resource\":\"/user/sayHello\",\"strategy\":0}]', 'f63b4b5c978d62227dbb354c457fe360', '2023-04-26 19:06:47', '2023-04-26 11:06:47', NULL, '223.104.219.231', 'I', '');
INSERT INTO `his_config_info` VALUES (48, 92, 'userService-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"userService\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682507206925,\"gmtModified\":1682507206925,\"grade\":1,\"id\":2,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8721,\"resource\":\"/user/sayHello\",\"strategy\":0}]', 'f63b4b5c978d62227dbb354c457fe360', '2023-04-26 19:17:31', '2023-04-26 11:17:31', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (46, 93, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 19:17:50', '2023-04-26 11:17:50', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 94, 'gateway-gw-api-group-rules', 'SENTINEL_GROUP', '', '[{\"apiName\":\"userService\",\"app\":\"gateway\",\"gmtCreate\":1682516959067,\"gmtModified\":1682516959067,\"id\":1,\"ip\":\"192.168.43.163\",\"port\":8720,\"predicateItems\":[{\"matchStrategy\":0,\"pattern\":\"userService\"}]}]', 'a008a568bc439f903468378ab15375a7', '2023-04-26 21:49:19', '2023-04-26 13:49:19', NULL, '223.104.219.231', 'I', '');
INSERT INTO `his_config_info` VALUES (51, 95, 'gateway-gw-api-group-rules', 'SENTINEL_GROUP', '', '[{\"apiName\":\"userService\",\"app\":\"gateway\",\"gmtCreate\":1682516959067,\"gmtModified\":1682516959067,\"id\":1,\"ip\":\"192.168.43.163\",\"port\":8720,\"predicateItems\":[{\"matchStrategy\":0,\"pattern\":\"userService\"}]}]', 'a008a568bc439f903468378ab15375a7', '2023-04-26 21:49:37', '2023-04-26 13:49:37', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 96, 'gateway-gw-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"burst\":0,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682517031203,\"gmtModified\":1682517031203,\"grade\":1,\"id\":1,\"interval\":1,\"intervalUnit\":0,\"ip\":\"192.168.43.163\",\"port\":8720,\"resource\":\"userService\",\"resourceMode\":0}]', '4ab90462251f5a29e2e2d815bed02fb8', '2023-04-26 21:50:31', '2023-04-26 13:50:32', NULL, '223.104.219.231', 'I', '');
INSERT INTO `his_config_info` VALUES (46, 97, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682507869853,\"gmtModified\":1682507869853,\"grade\":1,\"id\":3,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"userService\",\"strategy\":0}]', '16bec6aec602353727e56b75aeca58f5', '2023-04-26 21:50:43', '2023-04-26 13:50:44', NULL, '223.104.219.231', 'D', '');
INSERT INTO `his_config_info` VALUES (48, 98, 'userService-flow-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 21:50:43', '2023-04-26 13:50:44', NULL, '223.104.219.231', 'D', '');
INSERT INTO `his_config_info` VALUES (51, 99, 'gateway-gw-api-group-rules', 'SENTINEL_GROUP', '', '[{\"apiName\":\"userService\",\"app\":\"gateway\",\"gmtCreate\":1682516959067,\"gmtModified\":1682516976984,\"id\":1,\"ip\":\"192.168.43.163\",\"port\":8720,\"predicateItems\":[{\"matchStrategy\":0,\"pattern\":\"userService\"}]}]', 'a345e0b942350d0a1500abc605ea5a19', '2023-04-26 21:50:43', '2023-04-26 13:50:44', NULL, '223.104.219.231', 'D', '');
INSERT INTO `his_config_info` VALUES (53, 100, 'gateway-gw-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"burst\":0,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682517031203,\"gmtModified\":1682517031203,\"grade\":1,\"id\":1,\"interval\":1,\"intervalUnit\":0,\"ip\":\"192.168.43.163\",\"port\":8720,\"resource\":\"userService\",\"resourceMode\":0}]', '4ab90462251f5a29e2e2d815bed02fb8', '2023-04-26 21:50:43', '2023-04-26 13:50:44', NULL, '223.104.219.231', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 101, 'gateway-gw-api-group-rules', 'SENTINEL_GROUP', '', '[{\"apiName\":\"userService\",\"app\":\"gateway\",\"gmtCreate\":1682517071587,\"gmtModified\":1682517071587,\"id\":2,\"ip\":\"192.168.43.163\",\"port\":8720,\"predicateItems\":[{\"matchStrategy\":0,\"pattern\":\"userService\"}]}]', '71884dda242080d83d3c8c3ff1011ac0', '2023-04-26 21:51:11', '2023-04-26 13:51:12', NULL, '223.104.219.231', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 102, 'gateway-gw-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"burst\":0,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682517091348,\"gmtModified\":1682517091348,\"grade\":1,\"id\":2,\"interval\":1,\"intervalUnit\":0,\"ip\":\"192.168.43.163\",\"port\":8720,\"resource\":\"userService\",\"resourceMode\":1}]', '5896a2abb786a5d1f812c4e2432a31e2', '2023-04-26 21:51:31', '2023-04-26 13:51:32', NULL, '223.104.219.231', 'I', '');
INSERT INTO `his_config_info` VALUES (55, 103, 'gateway-gw-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"burst\":0,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682517091348,\"gmtModified\":1682517091348,\"grade\":1,\"id\":2,\"interval\":1,\"intervalUnit\":0,\"ip\":\"192.168.43.163\",\"port\":8720,\"resource\":\"userService\",\"resourceMode\":1}]', '5896a2abb786a5d1f812c4e2432a31e2', '2023-04-26 21:52:02', '2023-04-26 13:52:02', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (54, 104, 'gateway-gw-api-group-rules', 'SENTINEL_GROUP', '', '[{\"apiName\":\"userService\",\"app\":\"gateway\",\"gmtCreate\":1682517071587,\"gmtModified\":1682517071587,\"id\":2,\"ip\":\"192.168.43.163\",\"port\":8720,\"predicateItems\":[{\"matchStrategy\":0,\"pattern\":\"userService\"}]}]', '71884dda242080d83d3c8c3ff1011ac0', '2023-04-26 21:54:03', '2023-04-26 13:54:03', NULL, '223.104.219.231', 'D', '');
INSERT INTO `his_config_info` VALUES (55, 105, 'gateway-gw-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"burst\":0,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682517091348,\"gmtModified\":1682517121787,\"grade\":1,\"id\":2,\"interval\":1,\"intervalUnit\":0,\"ip\":\"192.168.43.163\",\"port\":8720,\"resource\":\"userService\",\"resourceMode\":1}]', 'e691df04ae1c9f0d149ade03901bc135', '2023-04-26 21:54:03', '2023-04-26 13:54:03', NULL, '223.104.219.231', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 106, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682517446692,\"gmtModified\":1682517446692,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"userService\",\"strategy\":0}]', '880a347ceac4d5697440036841561401', '2023-04-26 21:57:27', '2023-04-26 13:57:27', NULL, '223.104.219.231', 'I', '');
INSERT INTO `his_config_info` VALUES (57, 107, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682517446692,\"gmtModified\":1682517446692,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"userService\",\"strategy\":0}]', '880a347ceac4d5697440036841561401', '2023-04-26 21:57:38', '2023-04-26 13:57:38', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 108, 'gateway-system-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"avgRt\":-1,\"gmtCreate\":1682517483346,\"gmtModified\":1682517483346,\"highestCpuUsage\":-1.0,\"highestSystemLoad\":-1.0,\"id\":1,\"ip\":\"192.168.43.163\",\"maxThread\":2,\"port\":8720,\"qps\":-1.0}]', 'cde4da0f2a05a6ef30657288b58cc3b5', '2023-04-26 21:58:03', '2023-04-26 13:58:04', NULL, '223.104.219.231', 'I', '');
INSERT INTO `his_config_info` VALUES (59, 109, 'gateway-system-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"avgRt\":-1,\"gmtCreate\":1682517483346,\"gmtModified\":1682517483346,\"highestCpuUsage\":-1.0,\"highestSystemLoad\":-1.0,\"id\":1,\"ip\":\"192.168.43.163\",\"maxThread\":2,\"port\":8720,\"qps\":-1.0}]', 'cde4da0f2a05a6ef30657288b58cc3b5', '2023-04-26 21:58:23', '2023-04-26 13:58:23', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (59, 110, 'gateway-system-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 21:58:32', '2023-04-26 13:58:32', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (59, 111, 'gateway-system-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"avgRt\":-1,\"gmtCreate\":1682517511843,\"gmtModified\":1682517511843,\"highestCpuUsage\":-1.0,\"highestSystemLoad\":-1.0,\"id\":2,\"ip\":\"192.168.43.163\",\"maxThread\":-1,\"port\":8720,\"qps\":2.0}]', 'ed28941fd1c2da91907f024fd99c07a2', '2023-04-26 21:59:21', '2023-04-26 13:59:21', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (2, 112, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        # dashboard: 162.14.77.43:8080\n        dashboard: 127.0.0.1:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n        gw-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-gw-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: gw-flow # 还可以是：degrade、authority、param-flow\n        gw-api-group:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-gw-api-group-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: gw-api-group # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', '45b50de5035842c4188391687755d35d', '2023-04-26 22:05:52', '2023-04-26 14:05:52', 'nacos', '223.104.219.231', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (3, 113, 'gateway-dev.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  # redis配置\n  redis:\n    host: 1.14.58.8\n    port: 6379\n    password: root\n    timeout: 10000\n  cloud:\n    gateway:\n      httpclient:\n        connect-timeout: 10000\n      routes: # 网关路由配置\n        - id: conversation\n          uri: lb://conversation\n          predicates:\n            - Path=/conversation/**\n        - id: normal\n          uri: lb://normal\n          predicates:\n            - Path=/common/**\n        - id: personManagement\n          uri: lb://personManagement\n          predicates:\n            - Path=/personManagement/**\n        - id: sharePlatform\n          uri: lb://sharePlatform\n          predicates:\n            - Path=/sharePlatform/**\n        - id: technicalArchive\n          uri: lb://technicalArchive\n          predicates:\n            - Path=/technicalArchive/**\n        - id: userService\n          uri: lb://userService\n          predicates:\n            - Path=/user/**\n        - id: admin\n          uri: lb://admin\n          predicates:\n            - Path=/admin/**,/druid/**    ', 'd14750e1a094af52879520d78d2949ef', '2023-04-26 22:05:55', '2023-04-26 14:05:56', 'nacos', '223.104.219.231', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');
INSERT INTO `his_config_info` VALUES (57, 114, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 22:19:37', '2023-04-26 14:19:38', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (57, 115, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":1.0,\"gmtCreate\":1682518777149,\"gmtModified\":1682518777149,\"grade\":1,\"id\":1,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"personManagement\",\"strategy\":0}]', 'dabb32d83f7d7ae106676de31b3e2148', '2023-04-26 22:22:59', '2023-04-26 14:22:59', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (59, 116, 'gateway-system-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 22:23:24', '2023-04-26 14:23:24', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (59, 117, 'gateway-system-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"avgRt\":-1,\"gmtCreate\":1682519004132,\"gmtModified\":1682519004132,\"highestCpuUsage\":-1.0,\"highestSystemLoad\":-1.0,\"id\":1,\"ip\":\"192.168.43.163\",\"maxThread\":-1,\"port\":8720,\"qps\":2.0}]', '2dcc07917d46ef0efb4c6bd975fbe8fc', '2023-04-26 22:23:52', '2023-04-26 14:23:52', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (59, 118, 'gateway-system-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"avgRt\":-1,\"gmtCreate\":1682519004132,\"gmtModified\":1682519031786,\"highestCpuUsage\":-1.0,\"highestSystemLoad\":-1.0,\"id\":1,\"ip\":\"192.168.43.163\",\"maxThread\":-1,\"port\":8720,\"qps\":1.0}]', '4c46a0dcc014910c82c2ad858caa1434', '2023-04-26 22:27:00', '2023-04-26 14:27:01', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (57, 119, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 22:27:12', '2023-04-26 14:27:12', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (57, 120, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":1.0,\"gmtCreate\":1682519232079,\"gmtModified\":1682519232079,\"grade\":1,\"id\":2,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"personManagement\",\"strategy\":0}]', '4f28eee3730dfedd129a5c1ae5b09d7c', '2023-04-26 22:37:20', '2023-04-26 14:37:20', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (57, 121, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":2.0,\"gmtCreate\":1682519232079,\"gmtModified\":1682519839525,\"grade\":1,\"id\":2,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"personManagement\",\"strategy\":0}]', '3850cb50412f692e972eae1f10017bc6', '2023-04-26 22:38:04', '2023-04-26 14:38:04', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (57, 122, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 22:38:50', '2023-04-26 14:38:51', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (57, 123, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[{\"app\":\"gateway\",\"clusterConfig\":{\"acquireRefuseStrategy\":0,\"clientOfflineTime\":2000,\"fallbackToLocalWhenFail\":true,\"resourceTimeout\":2000,\"resourceTimeoutStrategy\":0,\"sampleCount\":10,\"strategy\":0,\"thresholdType\":0,\"windowIntervalMs\":1000},\"clusterMode\":false,\"controlBehavior\":0,\"count\":1.0,\"gmtCreate\":1682519930467,\"gmtModified\":1682519930467,\"grade\":1,\"id\":3,\"ip\":\"192.168.43.163\",\"limitApp\":\"default\",\"port\":8720,\"resource\":\"personManagement\",\"strategy\":0}]', '5da5e43c423de57942c2be95aff66832', '2023-04-26 22:41:27', '2023-04-26 14:41:28', NULL, '223.104.219.231', 'U', '');
INSERT INTO `his_config_info` VALUES (57, 124, 'gateway-flow-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 23:26:04', '2023-04-26 15:26:05', NULL, '223.104.219.231', 'D', '');
INSERT INTO `his_config_info` VALUES (59, 125, 'gateway-system-rules', 'SENTINEL_GROUP', '', '[]', 'd751713988987e9331980363e24189ce', '2023-04-26 23:26:04', '2023-04-26 15:26:05', NULL, '223.104.219.231', 'D', '');
INSERT INTO `his_config_info` VALUES (2, 126, 'common.yaml', 'DEV_GROUP', 'YUNKE', 'spring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://1.14.58.8:3306/yunke?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&&useSSL=false\n    username: root\n    password: root\n  cloud:\n    sentinel:\n      transport:\n        # 指定sentinel-dashboard控制台的连接地址\n        # dashboard: 162.14.77.43:8080\n        dashboard: 127.0.0.1:8080\n        # 指定微服务与sentinel-dashboard控制台的连接端口\n        # 默认8719端口，假如被占用会自动从8719开始依次+1扫描\n        # 直至找到未被占用的端口\n        port: 8719\n    # 基于nacos配置中心进行规则持久化(利用nacos配置中心持久化流控规则)\n      datasource:\n        # 设置Sentinel Nacos数据源配置；其中flow是数据源名，可以自行随意修改\n        # Nacos数据源地址(需要启动一台Nacos Server)\n        # nacos地址\n        flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: flow # 还可以是：degrade、authority、param-flow\n        degrade:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-degrade-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: degrade # 还可以是：degrade、authority、param-flow\n        param-flow:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-param-flow-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: param-flow # 还可以是：degrade、authority、param-flow\n        system:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-system-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: system # 还可以是：degrade、authority、param-flow\n        authority:\n          nacos:\n            server-addr: ${spring.cloud.nacos.server-addr}\n            data-id: ${spring.application.name}-authority-rules\n            group-id: SENTINEL_GROUP\n            # 数据类型\n            data-type: json\n            # 规则类型\n            rule-type: authority # 还可以是：degrade、authority、param-flow\n      # true表示饥饿加载\n      eager: true\nfeign:\n  sentinel:\n    # true开启sentinel对feign的支持，false则关闭\n    enabled: true\nYK:\n  sys-conf:\n    enable-mail-register: true\n    front-end-url: 162.14.77.43:8010\n    front-host-url: 39.108.117.49:80\n    mail-sender: titos_yunke@qq.com\n  token:\n    secretKey: YUNKE\n', 'eda56861e0aa2e0052808d2030b0ee9f', '2023-04-26 23:26:33', '2023-04-26 15:26:33', 'nacos', '223.104.219.231', 'U', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', 'f30cdd99-f7f3-4c24-adc4-1c99101b544f', 'dev', 'dev命名空间', 'nacos', 1678875294899, 1678875401987);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('myworld6578', '$2a$10$8UB/d7Y6ZDEsJe0Xg/eXBecJaznR/LBGiELm3toGClRolmFdTDRAu', 1);
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
