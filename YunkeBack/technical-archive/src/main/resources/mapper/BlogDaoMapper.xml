<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.titos.technicalarchive.dao.BlogDao">
    <resultMap id="BaseResult" type="com.titos.info.blog.model.Blog">
        <id column="id" property="id" jdbcType="NUMERIC"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="article_title" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="article_content" property="articleContent" jdbcType="VARCHAR"/>
        <result column="article_cover" property="articleCover" jdbcType="VARCHAR"/>
        <result column="category" property="category" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="article_text" property="articleText" jdbcType="VARCHAR"/>
        <result column="violation" property="violation" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, article_title, article_content, article_cover, category, status, create_time, article_text, violation
    </sql>
    <insert id="insertBlog">
        insert into blog(user_id, article_title, article_content, article_cover, category, status, create_time, article_text, violation)
        values (#{userId}, #{articleTitle}, #{articleContent}, #{articleCover}, #{category}, #{status}, #{createTime}, #{articleText}, #{violation})
    </insert>
    <delete id="deleteBlogById">
        delete from blog where id = #{blogId}
    </delete>
    <select id="selectBlogByPattern" resultMap="BaseResult">
        select <include refid="Base_Column_List"/>
            from blog where article_title like CONCAT('%', #{pattern}, '%')
                        or  article_text like CONCAT('%', #{pattern}, '%')
    </select>
    <select id="selectBlogByUserId" resultMap="BaseResult">
        select <include refid="Base_Column_List"/>
            from blog where user_id = #{userId}
    </select>
    <select id="selectBlogByCategory" resultMap="BaseResult">
        select <include refid="Base_Column_List"/>
            from blog where category=#{category} and user_id=#{userId}
    </select>
    <select id="selectBlogByPatternAndCategory" resultMap="BaseResult">
        select <include refid="Base_Column_List"/>
            from blog where category=#{category} and (article_title like CONCAT('%', #{pattern}, '%')
        or  article_text like CONCAT('%', #{pattern}, '%')) and user_id = #{userId}
    </select>
    <select id="selectBlogById" resultMap="BaseResult">
        select <include refid="Base_Column_List"/>
            from blog where id = #{id}
    </select>
    <select id="selectAllCategoryByUserId" resultType="String">
        select distinct category from blog where user_id = #{userId}
    </select>
    <select id="selectBlogNumByUserId" resultType="Integer">
        select count(id) from blog where user_id = #{userId}
    </select>
    <select id="selectBlogNumToday" resultType="Integer">
        select count(id) from blog where to_days(create_time) = to_days(now()) and user_id = #{userId}
    </select>
    <select id="selectBlogNumNow" resultType="com.titos.technicalarchive.vo.BlogNumMonth">
        select date_format(create_time, '%d') as days, count(*) as total
        from blog where date_format(create_time, '%Y%m') = date_format(curdate(), '%Y%m') and user_id = #{userId}
    </select>
    <select id="selectBlogNumLast" resultType="com.titos.technicalarchive.vo.BlogNumMonth">
        select date_format(create_time,'%d') as days, count(*) as total
        from blog where period_diff(date_format(curdate(), '%Y%m'), date_format(create_time, '%Y%m')) = 1 and user_id = #{userId}
        group by days
    </select>
    <select id="selectBlogByCondition" parameterType="com.titos.info.blog.vo.BlogVO" resultMap="BaseResult">
        select <include refid="Base_Column_List"/>
        from blog
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="articleTitle != null and articleTitle != ''">
                AND article_title like concat('%', #{articleTitle}, '%')
            </if>
            <if test="articleContent != null and articleContent != ''">
                AND article_content like concat('%', #{articleContent}, '%')
            </if>
            <if test="articleCover != null and articleCover != ''">
                AND article_cover = #{articleCover}
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="category != null and category != ''">
                AND category = #{category}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND create_time &gt;= #{params.beginTime}
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND create_time &lt;= #{params.endTime}
            </if>
            <if test="articleText != null and articleText != ''">
                AND article_text like concat('%', #{articleText}, '%')
            </if>
            <if test="violation != null">
                AND violation = #{violation}
            </if>
        </where>
        ORDER BY create_time
        <if test="!isEarliest">
            DESC
        </if>
    </select>
    <update id="updateBlogById">
        update blog
        <set>
            <if test="articleTitle != null">
                article_title = #{articleTitle},
            </if>
            <if test="articleContent != null">
                article_content = #{articleContent},
            </if>
            <if test="articleCover != null">
                article_cover = #{articleCover},
            </if>
            <if test="userId != null">
                user_id = #{userId, jdbcType=INTEGER},
            </if>
            <if test="category != null">
                category = #{category},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="articleText != null">
                article_text = #{articleText},
            </if>
            <if test="violation != null">
                violation = #{violation},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteBlogBatchById" parameterType="java.util.List">
        delete from blog where id in
        <foreach collection="ids" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </delete>
</mapper>